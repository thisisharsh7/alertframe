name: Check Alerts Cron

on:
  # Run every 5 minutes
  schedule:
    - cron: '*/5 * * * *'

  # Allow manual trigger from GitHub UI
  workflow_dispatch:

jobs:
  check-alerts:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Call AlertFrame Cron Endpoint
        run: |
          echo "üîç Calling cron endpoint at $(date)"
          echo "URL: ${{ secrets.VERCEL_APP_URL || 'https://alertframe.vercel.app' }}/api/cron/check-alerts"

          RESPONSE=$(curl -X GET \
            -H "Authorization: Bearer ${{ secrets.CRON_SECRET }}" \
            -H "User-Agent: GitHub-Actions-Cron" \
            -w "\n%{http_code}" \
            -s \
            "${{ secrets.VERCEL_APP_URL || 'https://alertframe.vercel.app' }}/api/cron/check-alerts")

          HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
          BODY=$(echo "$RESPONSE" | head -n-1)

          echo ""
          echo "üìä Response Code: $HTTP_CODE"
          echo "üìÑ Response Body:"
          echo "$BODY" | jq '.' || echo "$BODY"

          if [ "$HTTP_CODE" != "200" ]; then
            echo ""
            echo "‚ùå Error: Cron endpoint returned $HTTP_CODE"
            exit 1
          fi

          echo ""
          echo "‚úÖ Cron executed successfully"

      - name: Notify on Failure
        if: failure()
        run: |
          echo ""
          echo "‚ùå Cron endpoint failed!"
          echo "üìù Possible causes:"
          echo "  ‚Ä¢ Vercel app is down or deploying"
          echo "  ‚Ä¢ API endpoint error (check Vercel logs)"
          echo "  ‚Ä¢ CRON_SECRET is incorrect"
          echo "  ‚Ä¢ Network timeout"
          echo ""
          echo "üîß Next steps:"
          echo "  1. Check Vercel deployment status"
          echo "  2. View Vercel logs for errors"
          echo "  3. Test endpoint manually: curl https://your-app.vercel.app/api/cron/check-alerts"
